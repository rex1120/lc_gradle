// buildscript必须在顶部，注意位置
buildscript {
    repositories {
        // 优先使用国内源
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }
    dependencies {
        // 让spring-boot支持gradle
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.1.RELEASE'
    id "io.franzbecker.gradle-lombok" version "3.1.0"   //在此添加插件否则lombok引用会失败
}


def mybatis_plus_version = "3.1.2"
def spring_boot_version = "2.1.5.RELEASE"
def fast_json_version = "1.2.73"
def lombok_version = "1.18.12"
def mysql_version = "8.0.19"
//def hutool_version = "5.4.1"
def qiniu_version = "7.2.27"


apply plugin: 'java'

apply plugin: 'idea'
// 使用spring boot
apply plugin: "org.springframework.boot"
// 使用spring boot的自动依赖管理
apply plugin: 'io.spring.dependency-management'

apply plugin: "io.franzbecker.gradle-lombok"

group 'com.ryze'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // 使用国内的源
    maven { url 'https://maven.aliyun.com/repository/public' }
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${spring_boot_version}"
    //排除tomcat使用undertow
    compile("org.springframework.boot:spring-boot-starter-web:${spring_boot_version}") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile 'redis.clients:jedis:2.9.0'
    compile("org.springframework.boot:spring-boot-starter-redis:1.3.5.RELEASE")
//    compile("org.springframework.data:spring-data-redis:1.7.2.RELEASE")
    compile "org.springframework.boot:spring-boot-starter-undertow:${spring_boot_version}"
    compile 'cn.hutool:hutool-all:5.4.1'
    compile "com.qiniu:qiniu-java-sdk:${qiniu_version}"
    compile "org.springframework.boot:spring-boot-devtools:${spring_boot_version}"
    compile "org.springframework.boot:spring-boot-configuration-processor:${spring_boot_version}"
    compile "org.springframework.boot:spring-boot-starter-test:${spring_boot_version}"
    compile 'org.springframework.boot:spring-boot-starter-web'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    compile 'com.google.code.gson:gson:2.6.2'
    compile group: 'io.netty', name: 'netty-all', version: '4.1.15.Final'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "mysql:mysql-connector-java:${mysql_version}"
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.4.1'
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"
    compile "com.alibaba:fastjson:${fast_json_version}"
    compileOnly "org.projectlombok:lombok:${lombok_version}"
    compile "com.baomidou:mybatis-plus-extension:${mybatis_plus_version}"
    compile "com.baomidou:mybatis-plus-boot-starter:${mybatis_plus_version}"
}


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

[compileJava, javadoc, compileTestJava]*.options*.encoding = "UTF-8"
